<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="reserveMapper">

		<!--   하연 : 조인떄문에 야매로 가공한 resultSet 입니다.. -->
		<resultMap id="joinReserveResultSet" type="reserve">
			<result column="RESERVE_NO" property="reserveNo" />
			<result column="RESERVE_STATUS" property="reserveStatus" />
			<result column="RESERVE_DATE" property="reserveDate" />
			<result column="PRICE" property="price" />
			<result column="USE_DATE" property="useDate" />
			<!-- 여기 다른 테이블 조인한거 -->
			<result column="SPACE_TITLE" property="memNo" />
			<result column="ADDRESS_DEFAULT" property="denyMessage" />
			<result column="ATTACHMENT_NO" property="endTime" />
		</resultMap>
		
		<!--   하연 : 조인떄문에 야매로 가공한 resultSet 입니다.. -->
		<resultMap id="joinReserveDetailResultSet" type="reserve">
			<result column="RESERVE_NO" property="reserveNo" />
			<result column="RESERVE_DATE" property="reserveDate" />
			<result column="USE_DATE" property="useDate" />
			<result column="START_TIME" property="startTime" />
			<result column="END_TIME" property="endTime" />
			<result column="RESERVE_COUNT" property="reserveCount" />
			<result column="PRICE" property="price" />
			<result column="MEM_NO" property="memNo" />
			
			<!-- 회원(MEMBER)테이블 -->
			<result column="PHONE" property="denyMessage" />
			<result column="EMAIL" property="email" />
			<result column="NICKNAME" property="nickname" />
			<!-- PAYMENT 테이블 -->
			<result column="PAY_METHOD" property="payMethod" />
			
			<!-- SPACE 테이블 -->
			<result column="SPACE_TITLE" property="spaceTitle" />
		</resultMap>

		<select id="selectMyReserveListCount" resultType="_int">
			SELECT COUNT(*)
			FROM RESERVE
		</select>

		<select id="selectMyReservetList" resultMap="joinReserveResultSet">
			SELECT RESERVE_NO
			     , SPACE_TITLE
			     , ADDRESS_DEFAULT
			     , RESERVE_STATUS
			     , TO_CHAR(RESERVE_DATE, 'YYYYMMDD') AS "RESERVE_DATE"
			     , ATTACHMENT_NO
			     , PRICE
			     , TO_CHAR(USE_DATE, 'YYYYMMDD') AS "USE_DATE"
			FROM RESERVE R
			JOIN SPACE USING (SPACE_NO)
			JOIN MEMBER USING (MEM_NO)
			JOIN SPACE_ATTACHMENT USING(SPACE_NO)
			WHERE ATTACHMENT_LEVEL = 1
			  AND MEM_NO = #{memNo}
			ORDER BY RESERVE_NO DESC

		</select>
		
		<select id="selectMyReserveListSortCount" parameterType="member"  resultType="_int">
			SELECT COUNT(*)
			FROM RESERVE
			WHERE RESERVE_STATUS = #{memId}
			    AND MEM_NO = #{memNo}
		</select>
		
		<select id="selectMyReserveListSortConfirmCount" parameterType="member" resultType="_int">
			<![CDATA[
			SELECT COUNT(*)
			FROM RESERVE
			JOIN MEMBER USING (MEM_NO)
			WHERE RESERVE_STATUS = 'Y'
			  AND USE_DATE > SYSDATE	
			  AND MEM_NO = #{memNo}	
			]]>
		</select>
		
		<select id="selectMyReserveListSortUsedCount" parameterType="member" resultType="_int">
			<![CDATA[
			SELECT COUNT(*)
			FROM RESERVE
			JOIN MEMBER USING (MEM_NO)
			WHERE RESERVE_STATUS = 'Y'
			  AND USE_DATE < SYSDATE	
			  AND MEM_NO = #{memNo}		
			]]>
		</select>

		<select id="selectMyReserveSortList" resultMap="joinReserveResultSet">
			SELECT RESERVE_NO
			     , SPACE_TITLE
			     , ADDRESS_DEFAULT
			     , RESERVE_STATUS
			     , TO_CHAR(RESERVE_DATE, 'YYYYMMDD') AS "RESERVE_DATE"
			     , ATTACHMENT_NO
			     , PRICE
			     , TO_CHAR(USE_DATE, 'YYYYMMDD') AS "USE_DATE"
			FROM RESERVE R
			JOIN SPACE USING (SPACE_NO)
			JOIN MEMBER USING (MEM_NO)
			JOIN SPACE_ATTACHMENT USING(SPACE_NO)
			WHERE ATTACHMENT_LEVEL = 1
			  AND MEM_NO = #{memNo}
			  AND RESERVE_STATUS = #{memId}
			ORDER BY RESERVE_NO DESC
		</select>
		
		<select id="selectMyReserveSortConfirmList" resultMap="joinReserveResultSet">
			<![CDATA[
			SELECT RESERVE_NO
			     , SPACE_TITLE
			     , ADDRESS_DEFAULT
			     , RESERVE_STATUS
			     , TO_CHAR(RESERVE_DATE, 'YYYYMMDD') AS "RESERVE_DATE"
			     , ATTACHMENT_NO
			     , PRICE
			     , TO_CHAR(USE_DATE, 'YYYYMMDD') AS "USE_DATE"
			FROM RESERVE R
			JOIN SPACE USING (SPACE_NO)
			JOIN MEMBER USING (MEM_NO)
			JOIN SPACE_ATTACHMENT USING(SPACE_NO)
			WHERE ATTACHMENT_LEVEL = 1
			  AND MEM_NO = #{memNo}
			  AND RESERVE_STATUS = #{memId}
			  AND USE_DATE > SYSDATE	
			ORDER BY RESERVE_NO DESC		
			]]>
		</select>
		
		<select id="selectMyReserveSortUsedList" resultMap="joinReserveResultSet">
			<![CDATA[
			SELECT RESERVE_NO
			     , SPACE_TITLE
			     , ADDRESS_DEFAULT
			     , RESERVE_STATUS
			     , TO_CHAR(RESERVE_DATE, 'YYYYMMDD') AS "RESERVE_DATE"
			     , ATTACHMENT_NO
			     , PRICE
			     , TO_CHAR(USE_DATE, 'YYYYMMDD') AS "USE_DATE"
			FROM RESERVE R
			JOIN SPACE USING (SPACE_NO)
			JOIN MEMBER USING (MEM_NO)
			JOIN SPACE_ATTACHMENT USING(SPACE_NO)
			WHERE ATTACHMENT_LEVEL = 1
			  AND MEM_NO = #{memNo}
			  AND RESERVE_STATUS = #{memId}
			  AND USE_DATE < SYSDATE	
			ORDER BY RESERVE_NO DESC
			]]>
		</select>
		
		<select id="selectMyReserve" resultMap="joinReserveDetailResultSet">
			SELECT RESERVE_NO 
			     , RESERVE_DATE
			     , SPACE_TITLE
			     , USE_DATE
			     , START_TIME
			     , END_TIME
			     , RESERVE_COUNT
			     , MEM_NO
			     , NICKNAME
			     , PHONE
			     , EMAIL
			     , PAY_METHOD 
			     , PRICE
			  FROM RESERVE
			  JOIN SPACE USING(SPACE_NO)
			  JOIN MEMBER USING(MEM_NO)
			  JOIN PAYMENT USING (RESERVE_NO)
			 WHERE RESERVE_NO = #{reserveNo}
		</select>
		
		<update id="cancleMyReserve" parameterType="_int">
			UPDATE RESERVE
			   SET RESERVE_STATUS = 'C'
			 WHERE RESERVE_NO = #{rno}
		</update>
			
	<!-- 	정현 -->
	<!-- 	정현 start -->
	<!-- 	호스트 예약 관리리스트 set  -->
	<resultMap id="hostReserveListSet" type="reserve">
		<result column="RESERVE_NO" property="reserveNo" />
		<result column="RESERVE_COUNT" property="reserveCount" />
		<result column="RESERVE_DATE" property="reserveDate" />
		<result column="USE_DATE" property="useDate" />
		<result column="START_TIME" property="startTime" />
		<result column="END_TIME" property="endTime" />
		<result column="PRICE" property="price" />
		<result column="RESERVE_STATUS" property="reserveStatus" />
		<result column="DENY_MESSAGE" property="denyMessage" />
		<collection property="space" ofType="space" >
			<result column="SPACE_TITLE" property="spaceTitle" />
		</collection>
		<collection  property="member" ofType="member" >
			<result column="MEM_NAME" property="memName" />
			<result column="PHONE" property="phone" />
		</collection>
	</resultMap>	

	<!-- 호스트 예약 리스트  개수 -->
	<select id="selectHostReserveListCount" parameterType="_int" resultType="_int">
 	   SELECT COUNT(*)
       FROM (
       SELECT RESERVE_NO
       FROM RESERVE R
       JOIN MEMBER M ON R.MEM_NO = M.MEM_NO
       JOIN SPACE S ON R.SPACE_NO = S.SPACE_NO
       WHERE R.SPACE_NO IN (
                    SELECT SPACE_NO
                    FROM SPACE
                    WHERE HOST_NO = #{memNo}
       ))
	</select>
	<!-- 	호스트 예약 리스트-->
	<select id="selectHostReserveList" parameterType="_int" resultMap="hostReserveListSet">
	   SELECT RESERVE_NO
	   			, RESERVE_COUNT
                , TO_CHAR(USE_DATE, 'YYYY-MM-DD') AS USE_DATE
                , START_TIME, END_TIME, PRICE
                , RESERVE_STATUS
                , R.DENY_MESSAGE
                , M.MEM_NAME
                , M.PHONE
                , S.SPACE_TITLE
       FROM RESERVE R
       JOIN MEMBER M ON R.MEM_NO = M.MEM_NO
       JOIN SPACE S ON R.SPACE_NO = S.SPACE_NO
       WHERE R.SPACE_NO IN (
                    SELECT SPACE_NO
                    FROM SPACE
                    WHERE HOST_NO = #{memNo}
       )ORDER BY RESERVE_NO DESC
	</select>
	<!-- 호스트 검색 예약 리스트  개수 -->
	<select id="searchHostReserveListCount" parameterType="hashmap" resultType="_int">
 	   SELECT COUNT(*)
        FROM (
        SELECT RESERVE_NO
       FROM RESERVE R
       JOIN MEMBER M ON R.MEM_NO = M.MEM_NO
       JOIN SPACE S ON R.SPACE_NO = S.SPACE_NO
       WHERE R.SPACE_NO IN (
                    SELECT SPACE_NO
                    FROM SPACE
                    WHERE HOST_NO = #{memNo}
       )
       AND (MEM_NAME LIKE '%' || #{keyword} || '%'
        OR  RESERVE_NO LIKE '%' || #{keyword} || '%'))
	</select>
	<!-- 	호스트 검색 예약 리스트-->
	<select id="searchHostReserveList" parameterType="hashmap" resultMap="hostReserveListSet">
	   SELECT RESERVE_NO
	   			, RESERVE_COUNT
                , TO_CHAR(USE_DATE, 'YYYY-MM-DD') AS USE_DATE
                , START_TIME, END_TIME, PRICE
                , RESERVE_STATUS
                , R.DENY_MESSAGE
                , M.MEM_NAME
                , M.PHONE
                , S.SPACE_TITLE
       FROM RESERVE R
       JOIN MEMBER M ON R.MEM_NO = M.MEM_NO
       JOIN SPACE S ON R.SPACE_NO = S.SPACE_NO
       WHERE R.SPACE_NO IN (
                    SELECT SPACE_NO
                    FROM SPACE
                    WHERE HOST_NO = #{memNo}
       )
       AND (MEM_NAME LIKE '%' || #{keyword} || '%'
        OR  RESERVE_NO LIKE '%' || #{keyword} || '%')
        ORDER BY RESERVE_NO DESC
	</select>
	
	<!-- 	공간 재검수 신청 -->
	<update id="updateHostReserve" parameterType="reserve">
		UPDATE RESERVE
	    SET RESERVE_STATUS = #{reserveStatus}
	     , DENY_MESSAGE = #{denyMessage}
		 WHERE RESERVE_NO = #{reserveNo}
	</update>
	
	<!-- 정현 End -->

</mapper>