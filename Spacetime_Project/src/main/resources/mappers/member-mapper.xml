<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	
	<!-- MEMBER 테이블로부터 조회된 내용을 Member 타입으로 가공해주는 ResultMap -->
	<resultMap id="memberResultSet" type="member">
		<result column="MEM_NO" property="memNo" />
		<result column="MEM_ID" property="memId" />
		<result column="MEM_PWD" property="memPwd" />
		<result column="MEM_NAME" property="memName" />
		<result column="GENDER" property="gender" />
		<result column="BIRTHDAY" property="birthday" />
		<result column="NICKNAME" property="nickname" />
		<result column="PHONE" property="phone" />
		<result column="EMAIL" property="email" />
		<result column="PROFILE_PATH" property="profilePath" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="HOST_STATUS" property="hostStatus" />
		<result column="BANK_NAME" property="bankName" />
		<result column="ACCOUNT_NUM" property="accountNum" />
		<result column="BLACKLIST_YN" property="blacklist" />
		<result column="BLACKLIST_REASON" property="blacklistReason" />
		<result column="MEM_STATUS" property="memStatus" />
		<result column="GR_CODE" property="grCode" />
	</resultMap>

	<!-- 로그인용 쿼리문 - 경미 -->
	<select id="loginMember" parameterType="member" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE MEM_ID = #{memId}
		AND MEM_STATUS = 'N'
	</select>
	
	<!-- 회원가입용 쿼리문 - 경미 -->
	<insert id="insertMember" parameterType="member">
		INSERT INTO MEMBER (MEM_NO
						, MEM_ID
						, MEM_PWD
						, MEM_NAME
						, GENDER
						, BIRTHDAY
						, NICKNAME
						, PHONE
						, EMAIL)
					VALUES (SEQ_MNO.NEXTVAL
						, #{memId}
						, #{memPwd}
						, #{memName}
						, #{gender}
						, TO_DATE(#{birthday}, 'YYYYMMDD')
						, #{nickname}
						, #{phone}
						, #{email})
	</insert>
	
	<!-- 회원 탈퇴용 쿼리문 - 경미 -->
	<update id="deleteMember" parameterType="_int">
		UPDATE MEMBER
		SET MEM_STATUS = 'Y'
		WHERE MEM_NO = #{memNo}
	</update>
	
	<!-- 아이디 중복체크 쿼리문 - 경미 -->
	<select id="idCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEM_ID = #{checkId}
	</select>
	
	<!-- 닉네임 중복체크 쿼리문 - 경미 -->
	<select id="nickCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE NICKNAME = #{checkNick}
	</select>
	
	<!-- 이메일 중복체크 쿼리문 - 경미 -->
	<select id="emailCheck" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE EMAIL = #{checkEmail}
	</select>
	
	<!-- 아이디 찾기 쿼리문 - 경미 -->
	<select id="findId" parameterType="member" resultType="String">
		SELECT MEM_ID
		  FROM MEMBER
		 WHERE EMAIL = #{email}
		   AND MEM_NAME = #{memName}
		   AND PHONE = #{phone}
		   AND MEM_STATUS = 'N'
	</select>
	
	<!-- 비밀번호 변경용 쿼리문 - 경미 -->
	<update id="changePwd" parameterType="member">
		UPDATE MEMBER
		   SET MEM_PWD = #{memPwd}
		 WHERE MEM_ID = #{memId}
		   AND MEM_STATUS = 'N'
	</update>
	
	<!-- 회원정보 업데이트용 쿼리문 - 경미 -->
	<update id="updateMember" parameterType="hashmap">
		UPDATE MEMBER
		<choose>
			<when test="profilePath != null">
				SET PROFILE_PATH = #{profilePath}
				, NICKNAME = #{nickname}
			</when>
			<when test="profilePath == null and nickname != null">
				SET NICKNAME = #{nickname}
			</when>
			<when test="phone != null">
				SET PHONE = #{phone}
			</when>
			<when test="memPwd != null">
				SET MEM_PWD = #{memPwd}
			</when>
			<when test="bankName != null">
				SET BANK_NAME = #{bankName}
				, ACCOUNT_NUM = #{accountNum}
			</when>
		</choose>
		WHERE MEM_ID = #{memId}
		AND MEM_STATUS = 'N'
	</update>
	
	<!-- 회원수 조회용 쿼리문 - 혜민 -->
	<select id="selectMemberListCount" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEM_STATUS = 'N'
	</select>
	
	<!-- 회원 리스트 조회용 쿼리문 - 혜민 -->
	<select id="selectMemberList" resultMap="memberResultSet">
		SELECT MEM_NO, MEM_NAME, MEM_ID, NICKNAME, GR_NAME AS "GR_CODE", ENROLL_DATE, MEM_STATUS, BLACKLIST_YN
		FROM MEMBER
		JOIN MEMBER_GRADE USING (GR_CODE)
		ORDER BY MEM_NO DESC
		<!-- 호스트일때, 게스트일때, 블랙리스트일때 나중에 조건 추가 -->
	</select>
	
	<!-- 회원 상세정보 조회용 쿼리문 - 혜민 -->
	<select id="selectMember" parameterType="_int" resultMap="memberResultSet">
		SELECT MEM_NO, MEM_ID, MEM_NAME, GENDER, NICKNAME, PHONE, EMAIL, PROFILE_PATH, ENROLL_DATE, HOST_STATUS, BANK_NAME, ACCOUNT_NUM, BLACKLIST_YN, BLACKLIST_REASON, MEM_STATUS, GR_NAME AS "GR_CODE"
		FROM MEMBER
		JOIN MEMBER_GRADE USING (GR_CODE)
		WHERE MEM_NO = #{memNo}
	</select>
	
</mapper>
